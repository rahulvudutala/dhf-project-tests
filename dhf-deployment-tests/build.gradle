//buildscript {
//    repositories {
//        maven {url 'http://distro.marklogic.com/nexus/repository/maven-snapshots/'}
//        mavenLocal()
//        jcenter()
//    }
//    dependencies {
//        classpath "com.marklogic:ml-data-hub:5.0.0"
//        classpath "com.marklogic:marklogic-data-hub:5.0.0"
//    }
//}

plugins {
    id "groovy"
    id "java-gradle-plugin"
    id 'org.springframework.boot' version '2.1.3.RELEASE'
    id "io.spring.dependency-management" version "1.0.7.RELEASE"
    id 'com.marklogic.ml-data-hub' version '5.0.2'
}

apply plugin: "com.marklogic.ml-data-hub"

bootJar.enabled = false
jar.enabled = true

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
    maven { url 'http://repo.spring.io/milestone' }
    maven { url 'http://developer.marklogic.com/maven2' }
    maven { url "http://repository.cloudera.com/artifactory/cloudera-repos/" }
    maven { url 'http://distro.marklogic.com/nexus/repository/maven-snapshots/' }
}

configurations {
    mlcp {
        resolutionStrategy {
            force "xml-apis:xml-apis:1.4.01"
        }
    }
}

dependencies {
    compile gradleApi()
    compile ('com.marklogic:marklogic-data-hub:5.0.0') {
        exclude group: 'ch.qos.logback'
    }
    compile ('com.marklogic:ml-gradle:3.12.0') {
        exclude group: 'ch.qos.logback'
    }
    compile 'org.jdom:jdom2:2.0.6'
    testCompile localGroovy()
    testCompile gradleTestKit()
    testCompile 'xmlunit:xmlunit:1.3'
    testCompile ('org.spockframework:spock-spring:1.2-groovy-2.5') {
        exclude module: 'groovy-all'
    }
    testCompile('org.spockframework:spock-core:1.2-groovy-2.5') {
        exclude module: 'groovy-all'
    }
    testCompile ('org.springframework.boot:spring-boot-starter-test:2.0.6.RELEASE')  {
        exclude module: "logback-classic"      
    }
    testCompile 'commons-io:commons-io:2.4'
    testCompile 'com.marklogic:marklogic-xcc:9.0.9'
    mlcp "com.marklogic:mlcp:9.0.9"

    testRuntime 'org.junit.platform:junit-platform-runner:1.4.0'
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.3.2'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.3.2'
    testCompile 'junit:junit:4.12'
    testRuntime 'org.junit.vintage:junit-vintage-engine:5.3.2'
}

test {
    minHeapSize = "128m"
    maxHeapSize = "768m"
    testLogging {
        // Make test events are logged and standard out or error is shown
        events 'started','passed', 'skipped', 'failed'
        exceptionFormat 'full'
        showStandardStreams = true
    }
    include 'com/marklogic/gradle/integration/tests/**'
}

test.dependsOn("hubInit")